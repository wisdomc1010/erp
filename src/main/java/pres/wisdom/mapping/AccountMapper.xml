<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pres.wisdom.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="pres.wisdom.entity.Account" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, balance, client_id, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pres.wisdom.entity.Account" >
    insert into t_account (id, balance, client_id, 
      type)
    values (#{id,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, #{clientId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pres.wisdom.entity.Account" >
    insert into t_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pres.wisdom.entity.Account" >
    update t_account
    <set >
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pres.wisdom.entity.Account" >
    update t_account
    set balance = #{balance,jdbcType=DECIMAL},
      client_id = #{clientId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findRows" resultType="int" parameterType="pres.wisdom.entity.AccountPage">
		select count(1) 
		from
		(select u.id,u.clientId,u.clientName,u.type,u.balance from 
		(select a.id,a.client_id as clientId,c.name as clientName,a.type,a.balance
		from t_account a
		join t_customer c on a.client_id=c.id and a.type=0
		union all
		select a.id,a.client_id as clientId,s.name as clientName,a.type,a.balance
		from t_account a
		join t_supplier s on a.client_id=s.id and a.type=1) u
		<where>
			<if test='!"*".equals(clientName)'>
				u.clientName like CONCAT('%',#{clientName},'%')  
			</if>
			<if test='!"-1".equals(type.toString())'>
				and u.type=#{type}
			</if>
		</where>) a
  </select>
		<select id="selectByCondition" parameterType="pres.wisdom.entity.AccountPage"
		resultType="pres.wisdom.entity.AccountPage">
		select u.id,u.clientId,u.clientName,u.type,u.balance from 
		(select a.id,a.client_id as clientId,c.name as clientName,a.type,a.balance
		from t_account a
		join t_customer c on a.client_id=c.id and a.type=0
		union all
		select a.id,a.client_id as clientId,s.name as clientName,a.type,a.balance
		from t_account a
		join t_supplier s on a.client_id=s.id and a.type=1) u
		<where>
			<if test='!"*".equals(clientName)'>
				u.clientName like CONCAT('%',#{clientName},'%')  
			</if>
			<if test='!"-1".equals(type.toString())'>
				and u.type=#{type}
			</if>
		</where>
		order by u.id
   		limit 
   		#{begin,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	
  <select id="selectByClientId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
		<include refid="Base_Column_List" />
    from t_account
    where client_id = #{id,jdbcType=INTEGER}
  </select>
</mapper>