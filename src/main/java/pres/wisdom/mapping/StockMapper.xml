<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pres.wisdom.dao.StockMapper" >
  <resultMap id="BaseResultMap" type="pres.wisdom.entity.Stock" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_id, num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="pres.wisdom.entity.Stock" >
    insert into t_stock (id, goods_id, num
      )
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="pres.wisdom.entity.Stock" >
    insert into t_stock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pres.wisdom.entity.Stock" >
    update t_stock
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pres.wisdom.entity.Stock" >
    update t_stock
    set goods_id = #{goodsId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="findRows" resultType="int" parameterType="pres.wisdom.entity.StockPage">
		select count(1)
		from
		(
		select g.num as goodsNum,g.name as goodsName,sp.name as supplier,s.num,g.price
		from t_stock s
		join t_goods g on s.goods_id=g.id
		join t_supplier sp on g.supplier_id=sp.id
		<where>
			<if test='!"*".equals(goodsNum)'>
				g.num like CONCAT('%',#{goodsNum},'%')  
			</if>
			<if test='!"*".equals(goodsName)'>
				and g.name like CONCAT('%',#{goodsName},'%')  
			</if>
			<if test='!"*".equals(supplier)'>
				and sp.name like CONCAT('%',#{supplier},'%')  
			</if>
		</where>
		) a
  </select>
		<select id="selectByCondition" parameterType="pres.wisdom.entity.StockPage"
		resultType="pres.wisdom.entity.StockPage">
		select g.num as goodsNum,g.name as goodsName,sp.name as supplier,s.num,g.price
		from t_stock s
		join t_goods g on s.goods_id=g.id
		join t_supplier sp on g.supplier_id=sp.id
		<where>
			<if test='!"*".equals(goodsNum)'>
				g.num like CONCAT('%',#{goodsNum},'%')  
			</if>
			<if test='!"*".equals(goodsName)'>
				and g.name like CONCAT('%',#{goodsName},'%')  
			</if>
			<if test='!"*".equals(supplier)'>
				and sp.name like CONCAT('%',#{supplier},'%')  
			</if>
		</where>
		order by s.num desc
   		limit 
   		#{begin,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	
	<select id="selectByGoodsId" resultType="pres.wisdom.entity.StockPage" parameterType="java.lang.Integer" >
	    select 
	    	id, goods_id, num
	    from t_stock
	    where goods_id = #{goodsId,jdbcType=INTEGER}
  	</select>
  	
  	 <update id="updateByGoodsId" parameterType="pres.wisdom.entity.Stock" >
	    update t_stock
	    set num = #{num,jdbcType=INTEGER}
	    where goods_id = #{goodsId,jdbcType=INTEGER}
  	</update>	
</mapper>